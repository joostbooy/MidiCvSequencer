ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"arpeggiatorEngine.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN17ArpeggiatorEngine5resetEPNS_5ClockEh,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	_ZN17ArpeggiatorEngine5resetEPNS_5ClockEh
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	_ZN17ArpeggiatorEngine5resetEPNS_5ClockEh:
  28              	.LVL0:
  29              	.LFB2256:
  30              		.file 1 "Src/Engine/arpeggiatorEngine.cpp"
   1:Src/Engine/arpeggiatorEngine.cpp **** #include "arpeggiatorEngine.h"
   2:Src/Engine/arpeggiatorEngine.cpp **** 
   3:Src/Engine/arpeggiatorEngine.cpp **** Reciprocal<ArpeggiatorEngine::kMaxSize>ArpeggiatorEngine::reciprocal;
   4:Src/Engine/arpeggiatorEngine.cpp **** 
   5:Src/Engine/arpeggiatorEngine.cpp **** void ArpeggiatorEngine::reset(Clock *clock, uint8_t mode) {
  31              		.loc 1 5 59 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
   6:Src/Engine/arpeggiatorEngine.cpp **** 	uint8_t offset_ = arpeggiator_->offset();
  36              		.loc 1 6 2 view .LVU1
  37              		.loc 1 6 40 is_stmt 0 view .LVU2
  38 0000 836B     		ldr	r3, [r0, #56]
  39 0002 013A     		subs	r2, r2, #1
  40              	.LVL1:
  41              		.loc 1 6 40 view .LVU3
  42 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  43              	.LVL2:
  44              		.file 2 "Src/Settings/arpeggiator.h"
   1:Src/Settings/arpeggiator.h **** #ifndef Arpeggiator_h
   2:Src/Settings/arpeggiator.h **** #define Arpeggiator_h
   3:Src/Settings/arpeggiator.h **** 
   4:Src/Settings/arpeggiator.h **** #include "stmf4lib.h"
   5:Src/Settings/arpeggiator.h **** #include "fileReader.h"
   6:Src/Settings/arpeggiator.h **** #include "fileWriter.h"
   7:Src/Settings/arpeggiator.h **** #include "clockEngine.h"
   8:Src/Settings/arpeggiator.h **** #include "uiText.h"
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 2


   9:Src/Settings/arpeggiator.h **** 
  10:Src/Settings/arpeggiator.h **** class Arpeggiator {
  11:Src/Settings/arpeggiator.h **** 
  12:Src/Settings/arpeggiator.h **** public:
  13:Src/Settings/arpeggiator.h **** 
  14:Src/Settings/arpeggiator.h **** 	enum TriggerMode {
  15:Src/Settings/arpeggiator.h **** 		XOOX,
  16:Src/Settings/arpeggiator.h **** 		XOXX,
  17:Src/Settings/arpeggiator.h **** 		XXOO,
  18:Src/Settings/arpeggiator.h **** 		XXOX,
  19:Src/Settings/arpeggiator.h **** 		XXXO,
  20:Src/Settings/arpeggiator.h **** 		XXXX,
  21:Src/Settings/arpeggiator.h **** 
  22:Src/Settings/arpeggiator.h **** 		NUM_TRIGGER_MODES
  23:Src/Settings/arpeggiator.h **** 	};
  24:Src/Settings/arpeggiator.h **** 
  25:Src/Settings/arpeggiator.h **** 	static const char* trigger_mode_text(uint8_t mode) {
  26:Src/Settings/arpeggiator.h **** 		switch (mode)
  27:Src/Settings/arpeggiator.h **** 		{
  28:Src/Settings/arpeggiator.h **** 		case XOOX:	return "|..|";
  29:Src/Settings/arpeggiator.h **** 		case XOXX:	return "|.||";
  30:Src/Settings/arpeggiator.h **** 		case XXOO:	return "||..";
  31:Src/Settings/arpeggiator.h **** 		case XXOX:	return "||.|";
  32:Src/Settings/arpeggiator.h **** 		case XXXO:	return "|||.";
  33:Src/Settings/arpeggiator.h **** 		case XXXX:	return "||||";
  34:Src/Settings/arpeggiator.h **** 		default:	break;
  35:Src/Settings/arpeggiator.h **** 		}
  36:Src/Settings/arpeggiator.h **** 		return nullptr;
  37:Src/Settings/arpeggiator.h **** 	}
  38:Src/Settings/arpeggiator.h **** 
  39:Src/Settings/arpeggiator.h **** 	const uint8_t trigger_mask() {
  40:Src/Settings/arpeggiator.h **** 		switch (trigger_mode_)
  41:Src/Settings/arpeggiator.h **** 		{
  42:Src/Settings/arpeggiator.h **** 		case XOOX:	return 0x9;
  43:Src/Settings/arpeggiator.h **** 		case XOXX:	return 0xD;
  44:Src/Settings/arpeggiator.h **** 		case XXOO:	return 0x3;
  45:Src/Settings/arpeggiator.h **** 		case XXOX:	return 0xB;
  46:Src/Settings/arpeggiator.h **** 		case XXXO:	return 0x7;
  47:Src/Settings/arpeggiator.h **** 		case XXXX:	return 0xF;
  48:Src/Settings/arpeggiator.h **** 		default:	break;
  49:Src/Settings/arpeggiator.h **** 		}
  50:Src/Settings/arpeggiator.h **** 		return 0x00;
  51:Src/Settings/arpeggiator.h **** 	}
  52:Src/Settings/arpeggiator.h **** 
  53:Src/Settings/arpeggiator.h **** 	enum ClockMode {
  54:Src/Settings/arpeggiator.h **** 		OFF,
  55:Src/Settings/arpeggiator.h **** 		FORWARD,
  56:Src/Settings/arpeggiator.h **** 		REVERSE,
  57:Src/Settings/arpeggiator.h **** 		ALTERNATE,
  58:Src/Settings/arpeggiator.h **** 		ALTERNATE_REVERSE,
  59:Src/Settings/arpeggiator.h **** 		PINGPONG,
  60:Src/Settings/arpeggiator.h **** 		PINGPONG_REVERSE,
  61:Src/Settings/arpeggiator.h **** 		ZIGZAG,
  62:Src/Settings/arpeggiator.h **** 		ZIGZAG_REVERSE,
  63:Src/Settings/arpeggiator.h **** 
  64:Src/Settings/arpeggiator.h **** 		NUM_CLOCK_MODES
  65:Src/Settings/arpeggiator.h **** 	};
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 3


  66:Src/Settings/arpeggiator.h **** 
  67:Src/Settings/arpeggiator.h **** 	static const char* clock_mode_text(uint8_t mode) {
  68:Src/Settings/arpeggiator.h **** 		switch (mode)
  69:Src/Settings/arpeggiator.h **** 		{
  70:Src/Settings/arpeggiator.h **** 		case OFF:				return "OFF";
  71:Src/Settings/arpeggiator.h **** 		case FORWARD:			return "FORWARD";
  72:Src/Settings/arpeggiator.h **** 		case REVERSE:			return "REVERSE";
  73:Src/Settings/arpeggiator.h **** 		case ALTERNATE:			return "ALTERNATE";
  74:Src/Settings/arpeggiator.h **** 		case ALTERNATE_REVERSE:	return "ALTERNATE REVERSE";
  75:Src/Settings/arpeggiator.h **** 		case PINGPONG:			return "PINGPONG";
  76:Src/Settings/arpeggiator.h **** 		case PINGPONG_REVERSE:	return "PINGPONG REVERSE";
  77:Src/Settings/arpeggiator.h **** 		case ZIGZAG:			return "ZIGZAG";
  78:Src/Settings/arpeggiator.h **** 		case ZIGZAG_REVERSE:	return "ZIGZAG REVERSE";
  79:Src/Settings/arpeggiator.h **** 		default:				break;
  80:Src/Settings/arpeggiator.h **** 		}
  81:Src/Settings/arpeggiator.h **** 		return nullptr;
  82:Src/Settings/arpeggiator.h **** 	}
  83:Src/Settings/arpeggiator.h **** 
  84:Src/Settings/arpeggiator.h **** 	static const char* clock_mode_text_small(uint8_t mode) {
  85:Src/Settings/arpeggiator.h **** 		switch (mode)
  86:Src/Settings/arpeggiator.h **** 		{
  87:Src/Settings/arpeggiator.h **** 		case OFF:				return "OFF";
  88:Src/Settings/arpeggiator.h **** 		case FORWARD:			return ">";
  89:Src/Settings/arpeggiator.h **** 		case REVERSE:			return "<";
  90:Src/Settings/arpeggiator.h **** 		case ALTERNATE:			return ">|<";
  91:Src/Settings/arpeggiator.h **** 		case ALTERNATE_REVERSE:	return "<|>";
  92:Src/Settings/arpeggiator.h **** 		case PINGPONG:			return "><";
  93:Src/Settings/arpeggiator.h **** 		case PINGPONG_REVERSE:	return "<>";
  94:Src/Settings/arpeggiator.h **** 		case ZIGZAG:			return "_-_";
  95:Src/Settings/arpeggiator.h **** 		case ZIGZAG_REVERSE:	return "-_-";
  96:Src/Settings/arpeggiator.h **** 		default:				break;
  97:Src/Settings/arpeggiator.h **** 		}
  98:Src/Settings/arpeggiator.h **** 		return nullptr;
  99:Src/Settings/arpeggiator.h **** 	}
 100:Src/Settings/arpeggiator.h **** 
 101:Src/Settings/arpeggiator.h **** 	void init() {
 102:Src/Settings/arpeggiator.h **** 		set_offset(0);
 103:Src/Settings/arpeggiator.h **** 		set_trigger_mode(XXXX);
 104:Src/Settings/arpeggiator.h **** 		set_velocity(100);
 105:Src/Settings/arpeggiator.h **** 		set_gate_length(4);
 106:Src/Settings/arpeggiator.h **** 		set_note_mode(OFF);
 107:Src/Settings/arpeggiator.h **** 		set_velocity_mode(OFF);
 108:Src/Settings/arpeggiator.h **** 		set_gate_mode(OFF);
 109:Src/Settings/arpeggiator.h **** 		set_swing(8);
 110:Src/Settings/arpeggiator.h **** 		set_speed(ClockEngine::WHOLE_16TH);
 111:Src/Settings/arpeggiator.h **** 	}
 112:Src/Settings/arpeggiator.h **** 
 113:Src/Settings/arpeggiator.h **** 
 114:Src/Settings/arpeggiator.h **** 	// optional boundary check to speed up chord track engine
 115:Src/Settings/arpeggiator.h **** 
 116:Src/Settings/arpeggiator.h **** 	// speed
 117:Src/Settings/arpeggiator.h **** 	uint8_t speed() {
 118:Src/Settings/arpeggiator.h **** 		return speed_;
 119:Src/Settings/arpeggiator.h **** 	}
 120:Src/Settings/arpeggiator.h **** 
 121:Src/Settings/arpeggiator.h **** 	void set_speed(int value, bool boundary_check = 1) {
 122:Src/Settings/arpeggiator.h **** 		speed_ = boundary_check ? stmlib::clip(0, ClockEngine::NUM_SIGNATURES - 1, value) : value;
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 4


 123:Src/Settings/arpeggiator.h **** 	}
 124:Src/Settings/arpeggiator.h **** 
 125:Src/Settings/arpeggiator.h **** 	const char* speed_text() {
 126:Src/Settings/arpeggiator.h **** 		return ClockEngine::speed_text(speed());
 127:Src/Settings/arpeggiator.h **** 	}
 128:Src/Settings/arpeggiator.h **** 
 129:Src/Settings/arpeggiator.h **** 	// speed
 130:Src/Settings/arpeggiator.h **** 	uint8_t swing() {
 131:Src/Settings/arpeggiator.h **** 		return swing_;
 132:Src/Settings/arpeggiator.h **** 	}
 133:Src/Settings/arpeggiator.h **** 
 134:Src/Settings/arpeggiator.h **** 	void set_swing(int value, bool boundary_check = 1) {
 135:Src/Settings/arpeggiator.h **** 		swing_ = boundary_check ? stmlib::clip(1, 15, value) : value;
 136:Src/Settings/arpeggiator.h **** 	}
 137:Src/Settings/arpeggiator.h **** 
 138:Src/Settings/arpeggiator.h **** 	const char* swing_text() {
 139:Src/Settings/arpeggiator.h **** 		return ClockEngine::swing_text(swing());
 140:Src/Settings/arpeggiator.h **** 	}
 141:Src/Settings/arpeggiator.h **** 
 142:Src/Settings/arpeggiator.h **** 	// offset
 143:Src/Settings/arpeggiator.h **** 	uint8_t offset() {
 144:Src/Settings/arpeggiator.h **** 		return offset_;
  45              		.loc 2 144 3 is_stmt 1 view .LVU4
   7:Src/Engine/arpeggiatorEngine.cpp **** 
   8:Src/Engine/arpeggiatorEngine.cpp **** 	switch (mode)
  46              		.loc 1 8 2 view .LVU5
  47 0006 072A     		cmp	r2, #7
  48 0008 0ED8     		bhi	.L1
  49 000a DFE802F0 		tbb	[pc, r2]
  50              	.L4:
  51 000e 17       		.byte	(.L7-.L4)/2
  52 000f 0E       		.byte	(.L6-.L4)/2
  53 0010 17       		.byte	(.L7-.L4)/2
  54 0011 0E       		.byte	(.L6-.L4)/2
  55 0012 17       		.byte	(.L7-.L4)/2
  56 0013 0E       		.byte	(.L6-.L4)/2
  57 0014 1B       		.byte	(.L5-.L4)/2
  58 0015 04       		.byte	(.L3-.L4)/2
  59              		.p2align 1
  60              	.L3:
   9:Src/Engine/arpeggiatorEngine.cpp **** 	{
  10:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::FORWARD:
  11:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::ALTERNATE:
  12:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::PINGPONG:
  13:Src/Engine/arpeggiatorEngine.cpp **** 		clock->phase = 0;
  14:Src/Engine/arpeggiatorEngine.cpp **** 		clock->next = offset_;
  15:Src/Engine/arpeggiatorEngine.cpp **** 		break;
  16:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::ZIGZAG:
  17:Src/Engine/arpeggiatorEngine.cpp **** 		clock->phase = offset_;
  18:Src/Engine/arpeggiatorEngine.cpp **** 		clock->next = offset_ / 2;
  19:Src/Engine/arpeggiatorEngine.cpp **** 		if (offset_ & 1) {
  20:Src/Engine/arpeggiatorEngine.cpp **** 			clock->next = size_ - 1 - clock->next;
  21:Src/Engine/arpeggiatorEngine.cpp **** 		}
  22:Src/Engine/arpeggiatorEngine.cpp **** 		break;
  23:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::REVERSE:
  24:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::ALTERNATE_REVERSE:
  25:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::PINGPONG_REVERSE:
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 5


  26:Src/Engine/arpeggiatorEngine.cpp **** 		clock->phase = 1;
  27:Src/Engine/arpeggiatorEngine.cpp **** 		clock->next = (size_ - 1) - offset_;
  28:Src/Engine/arpeggiatorEngine.cpp **** 		break;
  29:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::ZIGZAG_REVERSE:
  61              		.loc 1 29 2 view .LVU6
  30:Src/Engine/arpeggiatorEngine.cpp **** 		clock->phase = offset_;
  62              		.loc 1 30 3 view .LVU7
  31:Src/Engine/arpeggiatorEngine.cpp **** 		clock->next = offset_ / 2;
  63              		.loc 1 31 25 is_stmt 0 view .LVU8
  64 0016 5A08     		lsrs	r2, r3, #1
  30:Src/Engine/arpeggiatorEngine.cpp **** 		clock->phase = offset_;
  65              		.loc 1 30 18 view .LVU9
  66 0018 0B60     		str	r3, [r1]
  67              		.loc 1 31 3 is_stmt 1 view .LVU10
  32:Src/Engine/arpeggiatorEngine.cpp **** 		if ((offset_ & 1) == 0) {
  68              		.loc 1 32 3 is_stmt 0 view .LVU11
  69 001a DB07     		lsls	r3, r3, #31
  70              	.LVL3:
  31:Src/Engine/arpeggiatorEngine.cpp **** 		clock->next = offset_ / 2;
  71              		.loc 1 31 15 view .LVU12
  72 001c 8A60     		str	r2, [r1, #8]
  73              		.loc 1 32 3 is_stmt 1 view .LVU13
  74 001e 03D4     		bmi	.L1
  33:Src/Engine/arpeggiatorEngine.cpp **** 			clock->next = size_ - 1 - clock->next;
  75              		.loc 1 33 4 view .LVU14
  76              		.loc 1 33 18 is_stmt 0 view .LVU15
  77 0020 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  78              	.LVL4:
  79              		.loc 1 33 24 view .LVU16
  80 0022 431E     		subs	r3, r0, #1
  81              		.loc 1 33 28 view .LVU17
  82 0024 9A1A     		subs	r2, r3, r2
  83              		.loc 1 33 16 view .LVU18
  84 0026 8A60     		str	r2, [r1, #8]
  85              	.LVL5:
  86              	.L1:
  34:Src/Engine/arpeggiatorEngine.cpp **** 		}
  35:Src/Engine/arpeggiatorEngine.cpp **** 		break;
  36:Src/Engine/arpeggiatorEngine.cpp **** 	default:
  37:Src/Engine/arpeggiatorEngine.cpp **** 		break;
  38:Src/Engine/arpeggiatorEngine.cpp **** 	}
  39:Src/Engine/arpeggiatorEngine.cpp **** }
  87              		.loc 1 39 1 view .LVU19
  88 0028 7047     		bx	lr
  89              	.LVL6:
  90              	.L6:
  23:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::ALTERNATE_REVERSE:
  91              		.loc 1 23 2 is_stmt 1 view .LVU20
  24:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::PINGPONG_REVERSE:
  92              		.loc 1 24 2 view .LVU21
  25:Src/Engine/arpeggiatorEngine.cpp **** 		clock->phase = 1;
  93              		.loc 1 25 2 view .LVU22
  26:Src/Engine/arpeggiatorEngine.cpp **** 		clock->next = (size_ - 1) - offset_;
  94              		.loc 1 26 3 view .LVU23
  26:Src/Engine/arpeggiatorEngine.cpp **** 		clock->next = (size_ - 1) - offset_;
  95              		.loc 1 26 16 is_stmt 0 view .LVU24
  96 002a 0122     		movs	r2, #1
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 6


  97 002c 0A60     		str	r2, [r1]
  27:Src/Engine/arpeggiatorEngine.cpp **** 		break;
  98              		.loc 1 27 3 is_stmt 1 view .LVU25
  27:Src/Engine/arpeggiatorEngine.cpp **** 		break;
  99              		.loc 1 27 18 is_stmt 0 view .LVU26
 100 002e 90F800C0 		ldrb	ip, [r0]	@ zero_extendqisi2
  27:Src/Engine/arpeggiatorEngine.cpp **** 		break;
 101              		.loc 1 27 24 view .LVU27
 102 0032 0CF1FF30 		add	r0, ip, #-1
 103              	.LVL7:
  27:Src/Engine/arpeggiatorEngine.cpp **** 		break;
 104              		.loc 1 27 29 view .LVU28
 105 0036 C31A     		subs	r3, r0, r3
 106              	.LVL8:
  27:Src/Engine/arpeggiatorEngine.cpp **** 		break;
 107              		.loc 1 27 15 view .LVU29
 108 0038 8B60     		str	r3, [r1, #8]
  28:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::ZIGZAG_REVERSE:
 109              		.loc 1 28 3 is_stmt 1 view .LVU30
 110 003a 7047     		bx	lr
 111              	.LVL9:
 112              	.L7:
  10:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::ALTERNATE:
 113              		.loc 1 10 2 view .LVU31
  11:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::PINGPONG:
 114              		.loc 1 11 2 view .LVU32
  12:Src/Engine/arpeggiatorEngine.cpp **** 		clock->phase = 0;
 115              		.loc 1 12 2 view .LVU33
  13:Src/Engine/arpeggiatorEngine.cpp **** 		clock->next = offset_;
 116              		.loc 1 13 3 view .LVU34
  13:Src/Engine/arpeggiatorEngine.cpp **** 		clock->next = offset_;
 117              		.loc 1 13 16 is_stmt 0 view .LVU35
 118 003c 0022     		movs	r2, #0
  14:Src/Engine/arpeggiatorEngine.cpp **** 		break;
 119              		.loc 1 14 17 view .LVU36
 120 003e 8B60     		str	r3, [r1, #8]
  13:Src/Engine/arpeggiatorEngine.cpp **** 		clock->next = offset_;
 121              		.loc 1 13 16 view .LVU37
 122 0040 0A60     		str	r2, [r1]
  14:Src/Engine/arpeggiatorEngine.cpp **** 		break;
 123              		.loc 1 14 3 is_stmt 1 view .LVU38
  15:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::ZIGZAG:
 124              		.loc 1 15 3 view .LVU39
 125 0042 7047     		bx	lr
 126              	.L5:
  16:Src/Engine/arpeggiatorEngine.cpp **** 		clock->phase = offset_;
 127              		.loc 1 16 2 view .LVU40
  17:Src/Engine/arpeggiatorEngine.cpp **** 		clock->next = offset_ / 2;
 128              		.loc 1 17 3 view .LVU41
  18:Src/Engine/arpeggiatorEngine.cpp **** 		if (offset_ & 1) {
 129              		.loc 1 18 25 is_stmt 0 view .LVU42
 130 0044 5A08     		lsrs	r2, r3, #1
  17:Src/Engine/arpeggiatorEngine.cpp **** 		clock->next = offset_ / 2;
 131              		.loc 1 17 18 view .LVU43
 132 0046 0B60     		str	r3, [r1]
  18:Src/Engine/arpeggiatorEngine.cpp **** 		if (offset_ & 1) {
 133              		.loc 1 18 3 is_stmt 1 view .LVU44
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 7


  19:Src/Engine/arpeggiatorEngine.cpp **** 			clock->next = size_ - 1 - clock->next;
 134              		.loc 1 19 3 is_stmt 0 view .LVU45
 135 0048 DB07     		lsls	r3, r3, #31
 136              	.LVL10:
  18:Src/Engine/arpeggiatorEngine.cpp **** 		if (offset_ & 1) {
 137              		.loc 1 18 15 view .LVU46
 138 004a 8A60     		str	r2, [r1, #8]
  19:Src/Engine/arpeggiatorEngine.cpp **** 			clock->next = size_ - 1 - clock->next;
 139              		.loc 1 19 3 is_stmt 1 view .LVU47
 140 004c ECD5     		bpl	.L1
  33:Src/Engine/arpeggiatorEngine.cpp **** 		}
 141              		.loc 1 33 4 view .LVU48
  33:Src/Engine/arpeggiatorEngine.cpp **** 		}
 142              		.loc 1 33 18 is_stmt 0 view .LVU49
 143 004e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 144              	.LVL11:
  33:Src/Engine/arpeggiatorEngine.cpp **** 		}
 145              		.loc 1 33 24 view .LVU50
 146 0050 431E     		subs	r3, r0, #1
  33:Src/Engine/arpeggiatorEngine.cpp **** 		}
 147              		.loc 1 33 28 view .LVU51
 148 0052 9A1A     		subs	r2, r3, r2
  33:Src/Engine/arpeggiatorEngine.cpp **** 		}
 149              		.loc 1 33 16 view .LVU52
 150 0054 8A60     		str	r2, [r1, #8]
 151 0056 E7E7     		b	.L1
 152              		.cfi_endproc
 153              	.LFE2256:
 155              		.section	.text._ZN17ArpeggiatorEngine4tickEPNS_5ClockEh,"ax",%progbits
 156              		.align	1
 157              		.p2align 2,,3
 158              		.global	_ZN17ArpeggiatorEngine4tickEPNS_5ClockEh
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu fpv4-sp-d16
 164              	_ZN17ArpeggiatorEngine4tickEPNS_5ClockEh:
 165              	.LVL12:
 166              	.LFB2257:
  40:Src/Engine/arpeggiatorEngine.cpp **** 
  41:Src/Engine/arpeggiatorEngine.cpp **** void ArpeggiatorEngine::tick(Clock *clock, uint8_t mode) {
 167              		.loc 1 41 58 is_stmt 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
  42:Src/Engine/arpeggiatorEngine.cpp **** 
  43:Src/Engine/arpeggiatorEngine.cpp **** 	clock->curr = clock->next;
 172              		.loc 1 43 2 view .LVU54
 173              		.loc 1 43 23 is_stmt 0 view .LVU55
 174 0000 8B68     		ldr	r3, [r1, #8]
 175              		.loc 1 43 14 view .LVU56
 176 0002 4B60     		str	r3, [r1, #4]
  44:Src/Engine/arpeggiatorEngine.cpp **** 
  45:Src/Engine/arpeggiatorEngine.cpp **** 	if (clock->curr < 0 || size_ < 2) {
 177              		.loc 1 45 2 is_stmt 1 view .LVU57
 178 0004 002B     		cmp	r3, #0
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 8


  41:Src/Engine/arpeggiatorEngine.cpp **** 
 179              		.loc 1 41 58 is_stmt 0 view .LVU58
 180 0006 10B4     		push	{r4}
 181              		.cfi_def_cfa_offset 4
 182              		.cfi_offset 4, -4
 183              		.loc 1 45 2 view .LVU59
 184 0008 0FDB     		blt	.L13
 185              		.loc 1 45 25 discriminator 1 view .LVU60
 186 000a 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 187              		.loc 1 45 22 discriminator 1 view .LVU61
 188 000c 012C     		cmp	r4, #1
 189 000e 0CD9     		bls	.L13
  46:Src/Engine/arpeggiatorEngine.cpp **** 		clock->curr = 0;
  47:Src/Engine/arpeggiatorEngine.cpp **** 	} else if (clock->curr >= size_) {
 190              		.loc 1 47 9 is_stmt 1 view .LVU62
 191 0010 A342     		cmp	r3, r4
 192 0012 0CDB     		blt	.L15
  48:Src/Engine/arpeggiatorEngine.cpp **** 		clock->curr = size_ - 1;
 193              		.loc 1 48 3 view .LVU63
 194              		.loc 1 48 23 is_stmt 0 view .LVU64
 195 0014 013C     		subs	r4, r4, #1
 196 0016 013A     		subs	r2, r2, #1
 197              	.LVL13:
 198              		.loc 1 48 15 view .LVU65
 199 0018 4C60     		str	r4, [r1, #4]
  49:Src/Engine/arpeggiatorEngine.cpp **** 	}
  50:Src/Engine/arpeggiatorEngine.cpp **** 
  51:Src/Engine/arpeggiatorEngine.cpp **** 	switch (mode)
 200              		.loc 1 51 2 is_stmt 1 view .LVU66
 201 001a 072A     		cmp	r2, #7
 202 001c 31D8     		bhi	.L16
 203 001e DFE802F0 		tbb	[pc, r2]
 204              	.L18:
 205 0022 2B       		.byte	(.L23-.L18)/2
 206 0023 79       		.byte	(.L22-.L18)/2
 207 0024 20       		.byte	(.L21-.L18)/2
 208 0025 20       		.byte	(.L21-.L18)/2
 209 0026 11       		.byte	(.L20-.L18)/2
 210 0027 11       		.byte	(.L20-.L18)/2
 211 0028 35       		.byte	(.L19-.L18)/2
 212 0029 47       		.byte	(.L17-.L18)/2
 213              	.LVL14:
 214              		.p2align 1
 215              	.L13:
  46:Src/Engine/arpeggiatorEngine.cpp **** 	} else if (clock->curr >= size_) {
 216              		.loc 1 46 3 view .LVU67
  46:Src/Engine/arpeggiatorEngine.cpp **** 	} else if (clock->curr >= size_) {
 217              		.loc 1 46 15 is_stmt 0 view .LVU68
 218 002a 0024     		movs	r4, #0
 219 002c 4C60     		str	r4, [r1, #4]
 220              	.L15:
 221              		.loc 1 51 2 is_stmt 1 view .LVU69
 222 002e 02F1FF3C 		add	ip, r2, #-1
 223 0032 BCF1070F 		cmp	ip, #7
 224 0036 24D8     		bhi	.L16
 225 0038 DFE80CF0 		tbb	[pc, ip]
 226              	.L26:
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 9


 227 003c 1E       		.byte	(.L23-.L26)/2
 228 003d 48       		.byte	(.L27-.L26)/2
 229 003e 13       		.byte	(.L21-.L26)/2
 230 003f 13       		.byte	(.L21-.L26)/2
 231 0040 04       		.byte	(.L20-.L26)/2
 232 0041 04       		.byte	(.L20-.L26)/2
 233 0042 28       		.byte	(.L19-.L26)/2
 234 0043 3A       		.byte	(.L17-.L26)/2
 235              	.LVL15:
 236              		.p2align 1
 237              	.L20:
  52:Src/Engine/arpeggiatorEngine.cpp **** 	{
  53:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::FORWARD:
  54:Src/Engine/arpeggiatorEngine.cpp **** 		++clock->next;
  55:Src/Engine/arpeggiatorEngine.cpp **** 		if (clock->next >= size_) {
  56:Src/Engine/arpeggiatorEngine.cpp **** 			clock->next = 0;
  57:Src/Engine/arpeggiatorEngine.cpp **** 		}
  58:Src/Engine/arpeggiatorEngine.cpp **** 		break;
  59:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::REVERSE:
  60:Src/Engine/arpeggiatorEngine.cpp **** 		--clock->next;
  61:Src/Engine/arpeggiatorEngine.cpp **** 		if (clock->next < 0) {
  62:Src/Engine/arpeggiatorEngine.cpp **** 			clock->next = size_ - 1;
  63:Src/Engine/arpeggiatorEngine.cpp **** 		}
  64:Src/Engine/arpeggiatorEngine.cpp **** 		break;
  65:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::ALTERNATE:
  66:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::ALTERNATE_REVERSE:
  67:Src/Engine/arpeggiatorEngine.cpp **** 		if (clock->phase == 0) {
  68:Src/Engine/arpeggiatorEngine.cpp **** 			++clock->next;
  69:Src/Engine/arpeggiatorEngine.cpp **** 			if (clock->next >= size_) {
  70:Src/Engine/arpeggiatorEngine.cpp **** 				clock->phase = 1;
  71:Src/Engine/arpeggiatorEngine.cpp **** 				clock->next = size_ - 1;
  72:Src/Engine/arpeggiatorEngine.cpp **** 			}
  73:Src/Engine/arpeggiatorEngine.cpp **** 		} else {
  74:Src/Engine/arpeggiatorEngine.cpp **** 			--clock->next;
  75:Src/Engine/arpeggiatorEngine.cpp **** 			if (clock->next < 0) {
  76:Src/Engine/arpeggiatorEngine.cpp **** 				clock->phase = 0;
  77:Src/Engine/arpeggiatorEngine.cpp **** 				clock->next = 0;
  78:Src/Engine/arpeggiatorEngine.cpp **** 			}
  79:Src/Engine/arpeggiatorEngine.cpp **** 		}
  80:Src/Engine/arpeggiatorEngine.cpp **** 		break;
  81:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::PINGPONG:
 238              		.loc 1 81 2 view .LVU70
  82:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::PINGPONG_REVERSE:
 239              		.loc 1 82 2 view .LVU71
  83:Src/Engine/arpeggiatorEngine.cpp **** 		if (clock->phase == 0) {
 240              		.loc 1 83 3 view .LVU72
 241 0044 0A68     		ldr	r2, [r1]
 242 0046 002A     		cmp	r2, #0
 243 0048 54D1     		bne	.L30
  84:Src/Engine/arpeggiatorEngine.cpp **** 			++clock->next;
 244              		.loc 1 84 4 view .LVU73
 245 004a 0133     		adds	r3, r3, #1
 246 004c 8B60     		str	r3, [r1, #8]
  85:Src/Engine/arpeggiatorEngine.cpp **** 			if (clock->next >= size_) {
 247              		.loc 1 85 4 view .LVU74
 248              		.loc 1 85 23 is_stmt 0 view .LVU75
 249 004e 90F800C0 		ldrb	ip, [r0]	@ zero_extendqisi2
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 10


 250              		.loc 1 85 4 view .LVU76
 251 0052 6345     		cmp	r3, ip
 252 0054 17DB     		blt	.L12
  86:Src/Engine/arpeggiatorEngine.cpp **** 				clock->phase = 1;
 253              		.loc 1 86 5 is_stmt 1 view .LVU77
 254              		.loc 1 86 18 is_stmt 0 view .LVU78
 255 0056 0122     		movs	r2, #1
 256 0058 0A60     		str	r2, [r1]
  87:Src/Engine/arpeggiatorEngine.cpp **** 				clock->next = size_ - 2;
 257              		.loc 1 87 5 is_stmt 1 view .LVU79
 258              		.loc 1 87 19 is_stmt 0 view .LVU80
 259 005a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 260              	.LVL16:
 261              		.loc 1 87 25 view .LVU81
 262 005c 841E     		subs	r4, r0, #2
 263              		.loc 1 87 17 view .LVU82
 264 005e 8C60     		str	r4, [r1, #8]
 265 0060 11E0     		b	.L12
 266              	.LVL17:
 267              	.L21:
  65:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::ALTERNATE_REVERSE:
 268              		.loc 1 65 2 is_stmt 1 view .LVU83
  66:Src/Engine/arpeggiatorEngine.cpp **** 		if (clock->phase == 0) {
 269              		.loc 1 66 2 view .LVU84
  67:Src/Engine/arpeggiatorEngine.cpp **** 			++clock->next;
 270              		.loc 1 67 3 view .LVU85
 271 0062 0A68     		ldr	r2, [r1]
 272 0064 002A     		cmp	r2, #0
 273 0066 3BD1     		bne	.L29
  68:Src/Engine/arpeggiatorEngine.cpp **** 			if (clock->next >= size_) {
 274              		.loc 1 68 4 view .LVU86
 275 0068 0133     		adds	r3, r3, #1
 276 006a 8B60     		str	r3, [r1, #8]
  69:Src/Engine/arpeggiatorEngine.cpp **** 				clock->phase = 1;
 277              		.loc 1 69 4 view .LVU87
  69:Src/Engine/arpeggiatorEngine.cpp **** 				clock->phase = 1;
 278              		.loc 1 69 23 is_stmt 0 view .LVU88
 279 006c 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
  69:Src/Engine/arpeggiatorEngine.cpp **** 				clock->phase = 1;
 280              		.loc 1 69 4 view .LVU89
 281 006e A342     		cmp	r3, r4
 282 0070 09DB     		blt	.L12
  70:Src/Engine/arpeggiatorEngine.cpp **** 				clock->next = size_ - 1;
 283              		.loc 1 70 5 is_stmt 1 view .LVU90
  70:Src/Engine/arpeggiatorEngine.cpp **** 				clock->next = size_ - 1;
 284              		.loc 1 70 18 is_stmt 0 view .LVU91
 285 0072 0122     		movs	r2, #1
 286 0074 0A60     		str	r2, [r1]
 287 0076 2DE0     		b	.L38
 288              	.L23:
  53:Src/Engine/arpeggiatorEngine.cpp **** 		++clock->next;
 289              		.loc 1 53 2 is_stmt 1 view .LVU92
  54:Src/Engine/arpeggiatorEngine.cpp **** 		if (clock->next >= size_) {
 290              		.loc 1 54 3 view .LVU93
 291 0078 0133     		adds	r3, r3, #1
 292 007a 8B60     		str	r3, [r1, #8]
  55:Src/Engine/arpeggiatorEngine.cpp **** 			clock->next = 0;
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 11


 293              		.loc 1 55 3 view .LVU94
  55:Src/Engine/arpeggiatorEngine.cpp **** 			clock->next = 0;
 294              		.loc 1 55 22 is_stmt 0 view .LVU95
 295 007c 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
  55:Src/Engine/arpeggiatorEngine.cpp **** 			clock->next = 0;
 296              		.loc 1 55 3 view .LVU96
 297 007e A342     		cmp	r3, r4
 298 0080 01DB     		blt	.L12
 299              	.L16:
  88:Src/Engine/arpeggiatorEngine.cpp **** 			}
  89:Src/Engine/arpeggiatorEngine.cpp **** 		} else {
  90:Src/Engine/arpeggiatorEngine.cpp **** 			--clock->next;
  91:Src/Engine/arpeggiatorEngine.cpp **** 			if (clock->next < 0) {
  92:Src/Engine/arpeggiatorEngine.cpp **** 				clock->phase = 0;
  93:Src/Engine/arpeggiatorEngine.cpp **** 				clock->next = 1;
  94:Src/Engine/arpeggiatorEngine.cpp **** 			}
  95:Src/Engine/arpeggiatorEngine.cpp **** 		}
  96:Src/Engine/arpeggiatorEngine.cpp **** 		break;
  97:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::ZIGZAG:
  98:Src/Engine/arpeggiatorEngine.cpp **** 		++clock->phase;
  99:Src/Engine/arpeggiatorEngine.cpp **** 		if (clock->phase >= size_) {
 100:Src/Engine/arpeggiatorEngine.cpp **** 			clock->phase = 0;
 101:Src/Engine/arpeggiatorEngine.cpp **** 		}
 102:Src/Engine/arpeggiatorEngine.cpp **** 
 103:Src/Engine/arpeggiatorEngine.cpp **** 		clock->next = clock->phase / 2;
 104:Src/Engine/arpeggiatorEngine.cpp **** 		if (clock->phase & 1) {
 105:Src/Engine/arpeggiatorEngine.cpp **** 			clock->next = size_ - 1 - clock->next;
 106:Src/Engine/arpeggiatorEngine.cpp **** 		}
 107:Src/Engine/arpeggiatorEngine.cpp **** 		break;
 108:Src/Engine/arpeggiatorEngine.cpp **** 	case Arpeggiator::ZIGZAG_REVERSE:
 109:Src/Engine/arpeggiatorEngine.cpp **** 		++clock->phase;
 110:Src/Engine/arpeggiatorEngine.cpp **** 		if (clock->phase >= size_) {
 111:Src/Engine/arpeggiatorEngine.cpp **** 			clock->phase = 0;
 112:Src/Engine/arpeggiatorEngine.cpp **** 		}
 113:Src/Engine/arpeggiatorEngine.cpp **** 
 114:Src/Engine/arpeggiatorEngine.cpp **** 		clock->next = clock->phase / 2;
 115:Src/Engine/arpeggiatorEngine.cpp **** 		if ((clock->phase & 1) == 0) {
 116:Src/Engine/arpeggiatorEngine.cpp **** 			clock->next = size_ - 1 - clock->next;
 117:Src/Engine/arpeggiatorEngine.cpp **** 		}
 118:Src/Engine/arpeggiatorEngine.cpp **** 		break;
 119:Src/Engine/arpeggiatorEngine.cpp **** 	default:
 300              		.loc 1 119 2 is_stmt 1 view .LVU97
 120:Src/Engine/arpeggiatorEngine.cpp **** 		clock->next = 0;
 301              		.loc 1 120 3 view .LVU98
 302              		.loc 1 120 15 is_stmt 0 view .LVU99
 303 0082 0022     		movs	r2, #0
 304 0084 8A60     		str	r2, [r1, #8]
 121:Src/Engine/arpeggiatorEngine.cpp **** 		break;
 305              		.loc 1 121 3 is_stmt 1 view .LVU100
 306              	.LVL18:
 307              	.L12:
 122:Src/Engine/arpeggiatorEngine.cpp **** 	}
 123:Src/Engine/arpeggiatorEngine.cpp **** }
 308              		.loc 1 123 1 is_stmt 0 view .LVU101
 309 0086 5DF8044B 		ldr	r4, [sp], #4
 310              		.cfi_remember_state
 311              		.cfi_restore 4
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 12


 312              		.cfi_def_cfa_offset 0
 313 008a 7047     		bx	lr
 314              	.LVL19:
 315              	.L19:
 316              		.cfi_restore_state
  97:Src/Engine/arpeggiatorEngine.cpp **** 		++clock->phase;
 317              		.loc 1 97 2 is_stmt 1 view .LVU102
  98:Src/Engine/arpeggiatorEngine.cpp **** 		if (clock->phase >= size_) {
 318              		.loc 1 98 3 view .LVU103
 319 008c 0B68     		ldr	r3, [r1]
 320 008e 0133     		adds	r3, r3, #1
 321 0090 0B60     		str	r3, [r1]
  99:Src/Engine/arpeggiatorEngine.cpp **** 			clock->phase = 0;
 322              		.loc 1 99 3 view .LVU104
  99:Src/Engine/arpeggiatorEngine.cpp **** 			clock->phase = 0;
 323              		.loc 1 99 23 is_stmt 0 view .LVU105
 324 0092 90F800C0 		ldrb	ip, [r0]	@ zero_extendqisi2
  99:Src/Engine/arpeggiatorEngine.cpp **** 			clock->phase = 0;
 325              		.loc 1 99 3 view .LVU106
 326 0096 6345     		cmp	r3, ip
 327 0098 26DA     		bge	.L31
 103:Src/Engine/arpeggiatorEngine.cpp **** 		if (clock->phase & 1) {
 328              		.loc 1 103 3 is_stmt 1 view .LVU107
 103:Src/Engine/arpeggiatorEngine.cpp **** 		if (clock->phase & 1) {
 329              		.loc 1 103 30 is_stmt 0 view .LVU108
 330 009a 03EBD372 		add	r2, r3, r3, lsr #31
 331 009e 5210     		asrs	r2, r2, #1
 104:Src/Engine/arpeggiatorEngine.cpp **** 			clock->next = size_ - 1 - clock->next;
 332              		.loc 1 104 3 view .LVU109
 333 00a0 DC07     		lsls	r4, r3, #31
 103:Src/Engine/arpeggiatorEngine.cpp **** 		if (clock->phase & 1) {
 334              		.loc 1 103 15 view .LVU110
 335 00a2 8A60     		str	r2, [r1, #8]
 104:Src/Engine/arpeggiatorEngine.cpp **** 			clock->next = size_ - 1 - clock->next;
 336              		.loc 1 104 3 is_stmt 1 view .LVU111
 337 00a4 EFD5     		bpl	.L12
 105:Src/Engine/arpeggiatorEngine.cpp **** 		}
 338              		.loc 1 105 4 view .LVU112
 105:Src/Engine/arpeggiatorEngine.cpp **** 		}
 339              		.loc 1 105 18 is_stmt 0 view .LVU113
 340 00a6 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 341              	.LVL20:
 105:Src/Engine/arpeggiatorEngine.cpp **** 		}
 342              		.loc 1 105 24 view .LVU114
 343 00a8 441E     		subs	r4, r0, #1
 105:Src/Engine/arpeggiatorEngine.cpp **** 		}
 344              		.loc 1 105 28 view .LVU115
 345 00aa A31A     		subs	r3, r4, r2
 105:Src/Engine/arpeggiatorEngine.cpp **** 		}
 346              		.loc 1 105 16 view .LVU116
 347 00ac 8B60     		str	r3, [r1, #8]
 348 00ae EAE7     		b	.L12
 349              	.LVL21:
 350              	.L17:
 108:Src/Engine/arpeggiatorEngine.cpp **** 		++clock->phase;
 351              		.loc 1 108 2 is_stmt 1 view .LVU117
 109:Src/Engine/arpeggiatorEngine.cpp **** 		if (clock->phase >= size_) {
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 13


 352              		.loc 1 109 3 view .LVU118
 353 00b0 0B68     		ldr	r3, [r1]
 354 00b2 0133     		adds	r3, r3, #1
 355 00b4 0B60     		str	r3, [r1]
 110:Src/Engine/arpeggiatorEngine.cpp **** 			clock->phase = 0;
 356              		.loc 1 110 3 view .LVU119
 110:Src/Engine/arpeggiatorEngine.cpp **** 			clock->phase = 0;
 357              		.loc 1 110 23 is_stmt 0 view .LVU120
 358 00b6 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 110:Src/Engine/arpeggiatorEngine.cpp **** 			clock->phase = 0;
 359              		.loc 1 110 3 view .LVU121
 360 00b8 9342     		cmp	r3, r2
 361 00ba 24DB     		blt	.L32
 111:Src/Engine/arpeggiatorEngine.cpp **** 		}
 362              		.loc 1 111 4 is_stmt 1 view .LVU122
 111:Src/Engine/arpeggiatorEngine.cpp **** 		}
 363              		.loc 1 111 17 is_stmt 0 view .LVU123
 364 00bc 0022     		movs	r2, #0
 365 00be 0A60     		str	r2, [r1]
 114:Src/Engine/arpeggiatorEngine.cpp **** 		if ((clock->phase & 1) == 0) {
 366              		.loc 1 114 3 is_stmt 1 view .LVU124
 114:Src/Engine/arpeggiatorEngine.cpp **** 		if ((clock->phase & 1) == 0) {
 367              		.loc 1 114 15 is_stmt 0 view .LVU125
 368 00c0 8A60     		str	r2, [r1, #8]
 115:Src/Engine/arpeggiatorEngine.cpp **** 			clock->next = size_ - 1 - clock->next;
 369              		.loc 1 115 3 is_stmt 1 view .LVU126
 370              	.L33:
 116:Src/Engine/arpeggiatorEngine.cpp **** 		}
 371              		.loc 1 116 4 view .LVU127
 116:Src/Engine/arpeggiatorEngine.cpp **** 		}
 372              		.loc 1 116 18 is_stmt 0 view .LVU128
 373 00c2 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 374              	.LVL22:
 116:Src/Engine/arpeggiatorEngine.cpp **** 		}
 375              		.loc 1 116 24 view .LVU129
 376 00c4 431E     		subs	r3, r0, #1
 116:Src/Engine/arpeggiatorEngine.cpp **** 		}
 377              		.loc 1 116 28 view .LVU130
 378 00c6 9C1A     		subs	r4, r3, r2
 116:Src/Engine/arpeggiatorEngine.cpp **** 		}
 379              		.loc 1 116 16 view .LVU131
 380 00c8 8C60     		str	r4, [r1, #8]
 381 00ca DCE7     		b	.L12
 382              	.LVL23:
 383              	.L27:
  59:Src/Engine/arpeggiatorEngine.cpp **** 		--clock->next;
 384              		.loc 1 59 2 is_stmt 1 view .LVU132
  60:Src/Engine/arpeggiatorEngine.cpp **** 		if (clock->next < 0) {
 385              		.loc 1 60 3 view .LVU133
 386 00cc 013B     		subs	r3, r3, #1
  61:Src/Engine/arpeggiatorEngine.cpp **** 			clock->next = size_ - 1;
 387              		.loc 1 61 3 is_stmt 0 view .LVU134
 388 00ce 002B     		cmp	r3, #0
  60:Src/Engine/arpeggiatorEngine.cpp **** 		if (clock->next < 0) {
 389              		.loc 1 60 3 view .LVU135
 390 00d0 8B60     		str	r3, [r1, #8]
  61:Src/Engine/arpeggiatorEngine.cpp **** 			clock->next = size_ - 1;
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 14


 391              		.loc 1 61 3 is_stmt 1 view .LVU136
 392 00d2 D8DA     		bge	.L12
 393              	.LVL24:
 394              	.L38:
  71:Src/Engine/arpeggiatorEngine.cpp **** 			}
 395              		.loc 1 71 5 view .LVU137
  71:Src/Engine/arpeggiatorEngine.cpp **** 			}
 396              		.loc 1 71 19 is_stmt 0 view .LVU138
 397 00d4 90F800C0 		ldrb	ip, [r0]	@ zero_extendqisi2
  71:Src/Engine/arpeggiatorEngine.cpp **** 			}
 398              		.loc 1 71 25 view .LVU139
 399 00d8 0CF1FF30 		add	r0, ip, #-1
 400              	.LVL25:
  71:Src/Engine/arpeggiatorEngine.cpp **** 			}
 401              		.loc 1 71 17 view .LVU140
 402 00dc 8860     		str	r0, [r1, #8]
 403 00de D2E7     		b	.L12
 404              	.LVL26:
 405              	.L29:
  74:Src/Engine/arpeggiatorEngine.cpp **** 			if (clock->next < 0) {
 406              		.loc 1 74 4 is_stmt 1 view .LVU141
 407 00e0 013B     		subs	r3, r3, #1
  75:Src/Engine/arpeggiatorEngine.cpp **** 				clock->phase = 0;
 408              		.loc 1 75 4 is_stmt 0 view .LVU142
 409 00e2 002B     		cmp	r3, #0
  74:Src/Engine/arpeggiatorEngine.cpp **** 			if (clock->next < 0) {
 410              		.loc 1 74 4 view .LVU143
 411 00e4 8B60     		str	r3, [r1, #8]
  75:Src/Engine/arpeggiatorEngine.cpp **** 				clock->phase = 0;
 412              		.loc 1 75 4 is_stmt 1 view .LVU144
 413 00e6 CEDA     		bge	.L12
 414              	.L31:
  76:Src/Engine/arpeggiatorEngine.cpp **** 				clock->next = 0;
 415              		.loc 1 76 5 view .LVU145
  76:Src/Engine/arpeggiatorEngine.cpp **** 				clock->next = 0;
 416              		.loc 1 76 18 is_stmt 0 view .LVU146
 417 00e8 0020     		movs	r0, #0
 418              	.LVL27:
 419              		.loc 1 123 1 view .LVU147
 420 00ea 5DF8044B 		ldr	r4, [sp], #4
 421              		.cfi_remember_state
 422              		.cfi_restore 4
 423              		.cfi_def_cfa_offset 0
  76:Src/Engine/arpeggiatorEngine.cpp **** 				clock->next = 0;
 424              		.loc 1 76 18 view .LVU148
 425 00ee 0860     		str	r0, [r1]
  77:Src/Engine/arpeggiatorEngine.cpp **** 			}
 426              		.loc 1 77 5 is_stmt 1 view .LVU149
  77:Src/Engine/arpeggiatorEngine.cpp **** 			}
 427              		.loc 1 77 17 is_stmt 0 view .LVU150
 428 00f0 8860     		str	r0, [r1, #8]
 429              		.loc 1 123 1 view .LVU151
 430 00f2 7047     		bx	lr
 431              	.LVL28:
 432              	.L30:
 433              		.cfi_restore_state
  90:Src/Engine/arpeggiatorEngine.cpp **** 			if (clock->next < 0) {
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 15


 434              		.loc 1 90 4 is_stmt 1 view .LVU152
 435 00f4 581E     		subs	r0, r3, #1
 436              	.LVL29:
  91:Src/Engine/arpeggiatorEngine.cpp **** 				clock->phase = 0;
 437              		.loc 1 91 4 is_stmt 0 view .LVU153
 438 00f6 0028     		cmp	r0, #0
  90:Src/Engine/arpeggiatorEngine.cpp **** 			if (clock->next < 0) {
 439              		.loc 1 90 4 view .LVU154
 440 00f8 8860     		str	r0, [r1, #8]
  91:Src/Engine/arpeggiatorEngine.cpp **** 				clock->phase = 0;
 441              		.loc 1 91 4 is_stmt 1 view .LVU155
 442 00fa C4DA     		bge	.L12
  92:Src/Engine/arpeggiatorEngine.cpp **** 				clock->next = 1;
 443              		.loc 1 92 5 view .LVU156
  92:Src/Engine/arpeggiatorEngine.cpp **** 				clock->next = 1;
 444              		.loc 1 92 18 is_stmt 0 view .LVU157
 445 00fc 0024     		movs	r4, #0
  93:Src/Engine/arpeggiatorEngine.cpp **** 			}
 446              		.loc 1 93 17 view .LVU158
 447 00fe 0123     		movs	r3, #1
  92:Src/Engine/arpeggiatorEngine.cpp **** 				clock->next = 1;
 448              		.loc 1 92 18 view .LVU159
 449 0100 0C60     		str	r4, [r1]
  93:Src/Engine/arpeggiatorEngine.cpp **** 			}
 450              		.loc 1 93 5 is_stmt 1 view .LVU160
  93:Src/Engine/arpeggiatorEngine.cpp **** 			}
 451              		.loc 1 93 17 is_stmt 0 view .LVU161
 452 0102 8B60     		str	r3, [r1, #8]
 453 0104 BFE7     		b	.L12
 454              	.LVL30:
 455              	.L32:
 114:Src/Engine/arpeggiatorEngine.cpp **** 		if ((clock->phase & 1) == 0) {
 456              		.loc 1 114 3 is_stmt 1 view .LVU162
 114:Src/Engine/arpeggiatorEngine.cpp **** 		if ((clock->phase & 1) == 0) {
 457              		.loc 1 114 30 is_stmt 0 view .LVU163
 458 0106 03EBD374 		add	r4, r3, r3, lsr #31
 459 010a 6210     		asrs	r2, r4, #1
 115:Src/Engine/arpeggiatorEngine.cpp **** 			clock->next = size_ - 1 - clock->next;
 460              		.loc 1 115 3 view .LVU164
 461 010c DB07     		lsls	r3, r3, #31
 114:Src/Engine/arpeggiatorEngine.cpp **** 		if ((clock->phase & 1) == 0) {
 462              		.loc 1 114 15 view .LVU165
 463 010e 8A60     		str	r2, [r1, #8]
 115:Src/Engine/arpeggiatorEngine.cpp **** 			clock->next = size_ - 1 - clock->next;
 464              		.loc 1 115 3 is_stmt 1 view .LVU166
 465 0110 B9D4     		bmi	.L12
 466 0112 D6E7     		b	.L33
 467              	.L22:
  59:Src/Engine/arpeggiatorEngine.cpp **** 		--clock->next;
 468              		.loc 1 59 2 view .LVU167
  60:Src/Engine/arpeggiatorEngine.cpp **** 		if (clock->next < 0) {
 469              		.loc 1 60 3 view .LVU168
 470 0114 581E     		subs	r0, r3, #1
 471              	.LVL31:
  60:Src/Engine/arpeggiatorEngine.cpp **** 		if (clock->next < 0) {
 472              		.loc 1 60 3 is_stmt 0 view .LVU169
 473 0116 8860     		str	r0, [r1, #8]
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 16


  61:Src/Engine/arpeggiatorEngine.cpp **** 			clock->next = size_ - 1;
 474              		.loc 1 61 3 is_stmt 1 view .LVU170
 475 0118 B5E7     		b	.L12
 476              		.cfi_endproc
 477              	.LFE2257:
 479 011a 00BF     		.section	.text.startup._GLOBAL__sub_I__ZN17ArpeggiatorEngine10reciprocalE,"ax",%progbits
 480              		.align	1
 481              		.p2align 2,,3
 482              		.syntax unified
 483              		.thumb
 484              		.thumb_func
 485              		.fpu fpv4-sp-d16
 487              	_GLOBAL__sub_I__ZN17ArpeggiatorEngine10reciprocalE:
 488              	.LFB2753:
 489              		.loc 1 123 1 view -0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 494              	.LVL32:
 495              	.LBB14:
 496              	.LBI14:
 497              		.loc 1 123 1 view .LVU172
 498              	.LBB15:
 499              	.LBB16:
 500              	.LBI16:
 501              		.file 3 "/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h"
   1:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** #ifndef Reciprocal_h
   2:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** #define Reciprocal_h
   3:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 
   4:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** template<size_t kSize>
   5:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** class Reciprocal {
   6:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 
   7:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** public:
   8:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 
   9:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 	Reciprocal() {
 502              		.loc 3 9 2 view .LVU173
 503              	.LBE16:
 504              	.LBE15:
 505              	.LBE14:
 506              		.loc 1 123 1 is_stmt 0 view .LVU174
 507 0000 30B4     		push	{r4, r5}
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 4, -8
 510              		.cfi_offset 5, -4
 511              	.LBB29:
 512              	.LBB27:
 513              	.LBB25:
 514              	.LBB17:
 515              	.LBB18:
  10:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		value_[0] = 0.f;
 516              		.loc 3 10 3 view .LVU175
 517 0002 144B     		ldr	r3, .L41
 518              	.LBB19:
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
  12:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 			value_[i] = 1.f / i;
 519              		.loc 3 12 4 view .LVU176
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 17


 520 0004 144A     		ldr	r2, .L41+4
 521 0006 1548     		ldr	r0, .L41+8
 522 0008 DA60     		str	r2, [r3, #12]	@ float
 523              	.LBE19:
  10:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		value_[0] = 0.f;
 524              		.loc 3 10 3 view .LVU177
 525 000a 0021     		movs	r1, #0
 526              	.LBB20:
 527              		.loc 3 12 4 view .LVU178
 528 000c 4FF07A52 		mov	r2, #1048576000
 529              	.LBE20:
  10:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		value_[0] = 0.f;
 530              		.loc 3 10 3 view .LVU179
 531 0010 1960     		str	r1, [r3]	@ float
 532              	.LVL33:
 533              	.LBB21:
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 534              		.loc 3 11 24 is_stmt 1 view .LVU180
 535              		.loc 3 12 4 is_stmt 0 view .LVU181
 536 0012 4FF07C51 		mov	r1, #1056964608
 537 0016 124D     		ldr	r5, .L41+12
 538 0018 124C     		ldr	r4, .L41+16
 539 001a 9960     		str	r1, [r3, #8]	@ float
 540 001c 1A61     		str	r2, [r3, #16]	@ float
 541 001e 1249     		ldr	r1, .L41+20
 542 0020 124A     		ldr	r2, .L41+24
 543 0022 D861     		str	r0, [r3, #28]	@ float
 544 0024 4FF07850 		mov	r0, #1040187392
 545 0028 4FF07E5C 		mov	ip, #1065353216
 546 002c 5D61     		str	r5, [r3, #20]	@ float
 547 002e 9C61     		str	r4, [r3, #24]	@ float
 548 0030 0F4D     		ldr	r5, .L41+28
 549 0032 104C     		ldr	r4, .L41+32
 550 0034 1862     		str	r0, [r3, #32]	@ float
 551 0036 5962     		str	r1, [r3, #36]	@ float
 552 0038 0F48     		ldr	r0, .L41+36
 553 003a 1049     		ldr	r1, .L41+40
 554 003c 9A62     		str	r2, [r3, #40]	@ float
 555 003e 104A     		ldr	r2, .L41+44
 556 0040 DD62     		str	r5, [r3, #44]	@ float
 557 0042 1C63     		str	r4, [r3, #48]	@ float
 558 0044 C3F804C0 		str	ip, [r3, #4]	@ float
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 559              		.loc 3 11 3 is_stmt 1 view .LVU182
 560              	.LVL34:
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 561              		.loc 3 11 24 view .LVU183
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 562              		.loc 3 11 3 view .LVU184
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 563              		.loc 3 11 24 view .LVU185
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 564              		.loc 3 11 3 view .LVU186
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 565              		.loc 3 11 24 view .LVU187
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 566              		.loc 3 11 3 view .LVU188
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 18


  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 567              		.loc 3 11 24 view .LVU189
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 568              		.loc 3 11 3 view .LVU190
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 569              		.loc 3 11 24 view .LVU191
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 570              		.loc 3 11 3 view .LVU192
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 571              		.loc 3 11 24 view .LVU193
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 572              		.loc 3 11 3 view .LVU194
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 573              		.loc 3 11 24 view .LVU195
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 574              		.loc 3 11 3 view .LVU196
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 575              		.loc 3 11 24 view .LVU197
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 576              		.loc 3 11 3 view .LVU198
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 577              		.loc 3 11 24 view .LVU199
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 578              		.loc 3 11 3 view .LVU200
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 579              		.loc 3 11 24 view .LVU201
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 580              		.loc 3 11 3 view .LVU202
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 581              		.loc 3 11 24 view .LVU203
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 582              		.loc 3 11 3 view .LVU204
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 583              		.loc 3 11 24 view .LVU205
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 584              		.loc 3 11 24 is_stmt 0 view .LVU206
 585              	.LBE21:
 586              	.LBE18:
 587              	.LBE17:
 588              	.LBE25:
 589              	.LBE27:
 590              	.LBE29:
 591              		.loc 1 123 1 view .LVU207
 592 0048 30BC     		pop	{r4, r5}
 593              		.cfi_restore 5
 594              		.cfi_restore 4
 595              		.cfi_def_cfa_offset 0
 596              	.LBB30:
 597              	.LBB28:
 598              	.LBB26:
 599              	.LBB24:
 600              	.LBB23:
 601              	.LBB22:
 602              		.loc 3 12 4 view .LVU208
 603 004a 5863     		str	r0, [r3, #52]	@ float
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 604              		.loc 3 11 3 is_stmt 1 view .LVU209
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 19


 605              	.LVL35:
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 606              		.loc 3 11 24 view .LVU210
 607              		.loc 3 12 4 is_stmt 0 view .LVU211
 608 004c 9963     		str	r1, [r3, #56]	@ float
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 609              		.loc 3 11 3 is_stmt 1 view .LVU212
 610              	.LVL36:
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 611              		.loc 3 11 24 view .LVU213
 612              		.loc 3 12 4 is_stmt 0 view .LVU214
 613 004e DA63     		str	r2, [r3, #60]	@ float
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 614              		.loc 3 11 3 is_stmt 1 view .LVU215
 615              	.LVL37:
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 616              		.loc 3 11 24 view .LVU216
  11:/Users/joostbooy/Desktop/Code/stm32/lib/utils/reciprocal.h **** 		for (size_t i = 1; i < kSize; ++i) {
 617              		.loc 3 11 24 is_stmt 0 view .LVU217
 618              	.LBE22:
 619              	.LBE23:
 620              	.LBE24:
 621              	.LBE26:
 622              	.LBE28:
 623              	.LBE30:
 624              		.loc 1 123 1 view .LVU218
 625 0050 7047     		bx	lr
 626              	.L42:
 627 0052 00BF     		.align	2
 628              	.L41:
 629 0054 00000000 		.word	.LANCHOR0
 630 0058 ABAAAA3E 		.word	1051372203
 631 005c 2549123E 		.word	1041385765
 632 0060 CDCC4C3E 		.word	1045220557
 633 0064 ABAA2A3E 		.word	1042983595
 634 0068 398EE33D 		.word	1038323257
 635 006c CDCCCC3D 		.word	1036831949
 636 0070 8C2EBA3D 		.word	1035611788
 637 0074 ABAAAA3D 		.word	1034594987
 638 0078 D9899D3D 		.word	1033734617
 639 007c 2549923D 		.word	1032997157
 640 0080 8988883D 		.word	1032358025
 641              		.cfi_endproc
 642              	.LFE2753:
 644              		.section	.init_array,"aw",%init_array
 645              		.align	2
 646 0000 00000000 		.word	_GLOBAL__sub_I__ZN17ArpeggiatorEngine10reciprocalE(target1)
 647              		.global	_ZN17ArpeggiatorEngine10reciprocalE
 648              		.section	.bss._ZN17ArpeggiatorEngine10reciprocalE,"aw",%nobits
 649              		.align	2
 650              		.set	.LANCHOR0,. + 0
 653              	_ZN17ArpeggiatorEngine10reciprocalE:
 654 0000 00000000 		.space	64
 654      00000000 
 654      00000000 
 654      00000000 
 654      00000000 
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 20


 655              		.text
 656              	.Letext0:
 657              		.file 4 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/ar
 658              		.file 5 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/ar
 659              		.file 6 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/ar
 660              		.file 7 "/Users/joostbooy/STM32Cube/Repository/STM32Cube_FW_F4_V1.26.1/Drivers/CMSIS/Include/core_
 661              		.file 8 "/Users/joostbooy/STM32Cube/Repository/STM32Cube_FW_F4_V1.26.1/Drivers/CMSIS/Device/ST/STM
 662              		.file 9 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/li
 663              		.file 10 "/Users/joostbooy/STM32Cube/Repository/STM32Cube_FW_F4_V1.26.1/Drivers/STM32F4xx_HAL_Driv
 664              		.file 11 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 665              		.file 12 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 666              		.file 13 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 667              		.file 14 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 668              		.file 15 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 669              		.file 16 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 670              		.file 17 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 671              		.file 18 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 672              		.file 19 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 673              		.file 20 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 674              		.file 21 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 675              		.file 22 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 676              		.file 23 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 677              		.file 24 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 678              		.file 25 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 679              		.file 26 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 680              		.file 27 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 681              		.file 28 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 682              		.file 29 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 683              		.file 30 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 684              		.file 31 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 685              		.file 32 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 686              		.file 33 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 687              		.file 34 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 688              		.file 35 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/l
 689              		.file 36 "<built-in>"
 690              		.file 37 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 691              		.file 38 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 692              		.file 39 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 693              		.file 40 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 694              		.file 41 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 695              		.file 42 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 696              		.file 43 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 697              		.file 44 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 698              		.file 45 "/usr/local/Caskroom/gcc-arm-embedded/9-2019-q4-major/gcc-arm-none-eabi-9-2019-q4-major/a
 699              		.file 46 "/Users/joostbooy/Desktop/Code/stm32/lib/ff14b/source/ff.h"
 700              		.file 47 "/Users/joostbooy/Desktop/Code/stm32/lib/utils/stringBuilder.h"
 701              		.file 48 "Src/Disk/file.h"
 702              		.file 49 "/Users/joostbooy/Desktop/Code/stm32/lib/utils/hash.h"
 703              		.file 50 "Src/Disk/fileReader.h"
 704              		.file 51 "Src/Disk/fileWriter.h"
 705              		.file 52 "lookupTables/lookupTables.h"
 706              		.file 53 "Drivers/uart.h"
 707              		.file 54 "Drivers/Usb/usb.h"
 708              		.file 55 "lookupTables/font.h"
 709              		.file 56 "Src/Engine/clockEngine.h"
 710              		.file 57 "Src/Engine/arpeggiatorEngine.h"
ARM GAS  /var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arpeggiatorEngine.cpp
/var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s:18     .text._ZN17ArpeggiatorEngine5resetEPNS_5ClockEh:0000000000000000 $t
/var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s:27     .text._ZN17ArpeggiatorEngine5resetEPNS_5ClockEh:0000000000000000 _ZN17ArpeggiatorEngine5resetEPNS_5ClockEh
/var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s:51     .text._ZN17ArpeggiatorEngine5resetEPNS_5ClockEh:000000000000000e $d
/var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s:59     .text._ZN17ArpeggiatorEngine5resetEPNS_5ClockEh:0000000000000016 $t
/var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s:156    .text._ZN17ArpeggiatorEngine4tickEPNS_5ClockEh:0000000000000000 $t
/var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s:164    .text._ZN17ArpeggiatorEngine4tickEPNS_5ClockEh:0000000000000000 _ZN17ArpeggiatorEngine4tickEPNS_5ClockEh
/var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s:205    .text._ZN17ArpeggiatorEngine4tickEPNS_5ClockEh:0000000000000022 $d
/var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s:214    .text._ZN17ArpeggiatorEngine4tickEPNS_5ClockEh:000000000000002a $t
/var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s:227    .text._ZN17ArpeggiatorEngine4tickEPNS_5ClockEh:000000000000003c $d
/var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s:236    .text._ZN17ArpeggiatorEngine4tickEPNS_5ClockEh:0000000000000044 $t
/var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s:480    .text.startup._GLOBAL__sub_I__ZN17ArpeggiatorEngine10reciprocalE:0000000000000000 $t
/var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s:487    .text.startup._GLOBAL__sub_I__ZN17ArpeggiatorEngine10reciprocalE:0000000000000000 _GLOBAL__sub_I__ZN17ArpeggiatorEngine10reciprocalE
/var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s:629    .text.startup._GLOBAL__sub_I__ZN17ArpeggiatorEngine10reciprocalE:0000000000000054 $d
/var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s:645    .init_array:0000000000000000 $d
/var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s:653    .bss._ZN17ArpeggiatorEngine10reciprocalE:0000000000000000 _ZN17ArpeggiatorEngine10reciprocalE
/var/folders/84/_x1cyy_j36g486tldtwl37280000gn/T//ccnsLV3i.s:649    .bss._ZN17ArpeggiatorEngine10reciprocalE:0000000000000000 $d

NO UNDEFINED SYMBOLS
